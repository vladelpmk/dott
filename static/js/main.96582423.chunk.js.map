{"version":3,"sources":["static/logo-black.svg","modules/books.ts","components/Footer/index.tsx","middleware/api.ts","config/index.ts","components/Search/index.tsx","layouts/index.tsx","components/Carousel/components/Item/index.tsx","components/Carousel/components/Next.tsx","components/Carousel/components/Previous.tsx","components/Carousel/components/Error.tsx","components/Carousel/components/Loading.tsx","components/Carousel/components/Empty.tsx","components/Carousel/components/Initial.tsx","components/Carousel/index.tsx","App.tsx","serviceWorker.ts","store/index.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","BooksActionTypes","Footer","react_default","a","createElement","className","role","aria-label","href","rel","target","title","apiMiddleWare","store","next","action","type","axios","payload","url","then","response","dispatch","success","data","Object","objectSpread","humps","camelizeKeys","page","catch","responseError","error","request","API_URL","initialState","docs","query","numFound","start","loading","undefined","timeAt","initial","reducer","state","arguments","length","GET_BOOKS","GET_BOOKS_SUCCESS","moment","GET_BOOKS_PAGE_SUCCESS","concat","GET_BOOKS_ERROR","Search","typingTimeOut","handleAPI","e","preventDefault","_this","props","getBooksByTitle","clearTimeout","handleChange","setState","value","setTimeout","getLastSearchTimeStamp","books","local","format","Fragment","onSubmit","this","placeholder","onChange","React","Component","connect","encodeURI","Layout","_ref","children","src","logoBlack","alt","components_Search","Footer_Footer","CarouselItem","getImage","book","key","isbn","media","srcSet","_this$props","active","lazyLoad","authorName","join","Next","onClick","activeIndex","lastIndex","data-slide","aria-hidden","Loading","message","Empty","Initial","LOAD_BACK","LOAD_AHEAD","Carousel","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","interval","nextSlide","handleSlide","slide","getBooksByTitlePage","isLazyLoad","index","setInterval","prevProps","_this2","components_Initial","components_Loading","Error","components_Empty","data-ride","map","item","Item_CarouselItem","toString","Previous_Next","Next_Next","GET_BOOKS_PAGE","App","es","layouts","components_Carousel","Boolean","window","location","hostname","match","createRootReducer","combineReducers","booksReducer","composeEnhancers","composeWithDevTools","createStore","applyMiddleware","configureStore","initialReduxState","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96582423.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-black.4e028687.svg\";","import { Reducer } from 'redux'\nimport { action } from 'typesafe-actions'\nimport { API_CALL } from 'middleware/api'\nimport { API_URL } from 'config'\nimport moment from 'moment';\n\n\nexport enum BooksActionTypes {\n  GET_BOOKS = '@@books/GET',\n  GET_BOOKS_SUCCESS = '@@books/GET_SUCCESS',\n\n  GET_BOOKS_PAGE = '@@books/GET_PAGE',\n  GET_BOOKS_PAGE_SUCCESS = '@@books/GET_PAGE_SUCCESS',\n\n  GET_BOOKS_ERROR = '@@books/GET_ERROR'\n}\n\nexport interface BooksState {\n  initial: boolean;\n  query: string\n  docs: [] | any,\n  page: number,\n  numFound: number,\n  start: number,\n  error: any,\n  loading: boolean,\n  timeAt: any\n}\n\n\nexport const initialState: BooksState = {\n  docs: [],\n  query: '',\n  page: 0,\n  numFound: 0,\n  start: 0,\n  loading: false,\n  error: undefined,\n  timeAt: false,\n  initial: true\n}\n\nexport const getBooksByTitle = (title:string) => action(\n  API_CALL,\n  {\n    url: encodeURI(`${API_URL}search.json?q=${title}`),\n    page: 1,\n    query: title,\n    request: BooksActionTypes.GET_BOOKS,\n    success: BooksActionTypes.GET_BOOKS_SUCCESS,\n    error: BooksActionTypes.GET_BOOKS_ERROR\n  }\n)\n\nexport const getBooksByTitlePage = (title:string, page:number) => action(\n  API_CALL,\n  {\n    url: encodeURI(`${API_URL}search.json?q=${title}`),\n    page: page,\n    query: title,\n    request: BooksActionTypes.GET_BOOKS_PAGE,\n    success: BooksActionTypes.GET_BOOKS_PAGE_SUCCESS,\n    error: BooksActionTypes.GET_BOOKS_ERROR\n  }\n)\n\nconst reducer: Reducer<BooksState> = (state = initialState, action) => {\n  switch (action.type) {\n    case BooksActionTypes.GET_BOOKS: {\n      return { \n        ...state, \n        query: action.query,\n        loading: true,\n        initial: false\n      }\n    }\n    case BooksActionTypes.GET_BOOKS_SUCCESS: {          \n      return { \n        ...state, \n        ...action.data,\n        timeAt: moment(),\n        loading: false\n      }\n    }\n    case BooksActionTypes.GET_BOOKS_PAGE_SUCCESS: {                \n      return { \n        ...state, \n        docs: state.docs.concat(action.data.docs),\n        page: action.data.page,\n      }\n    }\n    case BooksActionTypes.GET_BOOKS_ERROR: {\n      return { \n        ...state\n        , error: action.error \n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as booksReducer }","import React from 'react';\nimport './footer.scss'\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-auto text-center\">\n      <div className=\"inner\">\n        <h6>\n          Made with <span role=\"img\" aria-label=\"Heart\">❤</span>\n          <span> by <a \n              href='https://www.linkedin.com/in/vladimir-gjorgievski-a9a0338a' \n              rel='noopener noreferrer' \n              target='_blank' \n              title='Vladimir Gjorgievski'\n            >Vladimir\n            </a>\n          </span>\n        </h6>\n    </div>\n  </footer>\n  );\n}\n\n","import { Middleware, Action } from \"redux\";\nimport { ApplicationState } from 'store';\nimport axios from 'axios'\n\nimport humps from 'humps';\n\nexport const API_CALL = '@api.CALL';\n\nexport const apiMiddleWare: Middleware<ApplicationState, Action | Promise<Action>> = \n  store => next => action => {\n    if (action.type === API_CALL) {\n        axios(action.payload.url).then(response => store.dispatch({\n          type: action.payload.success,\n          data: {\n            ...humps.camelizeKeys(response.data),\n            page: action.payload.page\n          }\n        })).catch(responseError => store.dispatch({\n          type: action.payload.error,\n          data: humps.camelizeKeys(responseError)\n        }));\n\n        store.dispatch({\n            type: action.payload.request,\n            data: action\n        })\n    }\n    return next(action)\n  }\n","export const API_URL =  'https://openlibrary.org/';","import React from 'react';\nimport { ApplicationState } from 'store';\nimport { connect } from 'react-redux';\nimport { getBooksByTitle, BooksState } from 'modules/books';\nimport { Dispatch } from 'redux';\n\nimport './search.scss';\n\ninterface PropsFromDispatch {\n  getBooksByTitle: typeof getBooksByTitle\n}\n\ninterface PropsFromState {\n  books: BooksState\n}\n\ntype Props = PropsFromDispatch & PropsFromState;\n \nclass Search extends React.Component<Props> {\n\n  typingTimeOut:any;\n\n  state = {\n    query: ''\n  }\n\n  handleAPI = (e:any):any => {\n    e && e.preventDefault();\n    this.props.getBooksByTitle(this.state.query);\n    clearTimeout(this.typingTimeOut);\n  }\n\n  handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    clearTimeout(this.typingTimeOut);\n    this.setState({\n      ...this.state,\n      query: e.target.value\n    })\n    this.typingTimeOut = setTimeout(\n      this.handleAPI,\n      1000\n    ) \n  }\n\n  getLastSearchTimeStamp = () => {  \n    const {books} = this.props; \n    if (!books.timeAt) {\n      return <></>;\n    }\n\n    return (\n      <small className='ml-2'>\n        <span role=\"img\" aria-label=\"stopwatch\">⏱️</span> last search @ <b>{books.timeAt.local().format('YYYY-MM-DD HH:mm:ss')}</b> page loaded: {books.page}\n      </small>\n    );\n  }\n\n  public render () {\n    return (\n      <>\n        <form className=\"search mt-2 mt-md-0 ml-4\" onSubmit={this.handleAPI}>\n          <input \n              className=\"form-control mr-sm-2\" \n              type=\"text\" placeholder=\"Search for a book\" \n              aria-label=\"Search\" \n              value={this.state.query} \n              onChange={this.handleChange}/>\n        \n        </form>\n        {this.getLastSearchTimeStamp()}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  books: state.books\n});\n\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\n  getBooksByTitle:(title:string) => dispatch(getBooksByTitle(title))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import React from 'react';\nimport { Footer } from 'components/Footer';\n\nimport Search from 'components/Search'\nimport './layout.scss';\nimport logoBlack from 'static/logo-black.svg';\n//import logoWhite from 'static/logo-white.svg';\n\nconst Layout: React.FC = ({children}) => {\n  return (\n    <>\n      <header className=\"masthead mb-auto\">\n        <div className=\"inner\">\n          <img src={logoBlack} alt='logo' />\n          <Search />\n        </div>\n      </header>\n\n      <main className=\"main inner cover\">\n        {children}\n      </main>\n      <Footer/>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './item.scss';\n\ninterface Props {\n    book: Book,\n    active: boolean,\n    lazyLoad: boolean\n}\n \nexport default class CarouselItem extends React.Component<Props> {\n\n  getImage = () => {\n    const {book} = this.props;\n    const key = 'isbn'; \n    const value = book.isbn && book.isbn[0];\n\n    return (\n      <picture>\n        <source media='(min-width: 650px)' srcSet={`https://covers.openlibrary.org/b/${key}/${value}-L.jpg`}/>\n        <source media='(min-width: 465px)' srcSet={`https://covers.openlibrary.org/b/${key}/${value}-M.jpg`}/>\n        <source media='(min-width: 265px)' srcSet={`https://covers.openlibrary.org/b/${key}/${value}-S.jpg`}/>\n        <img src={`https://covers.openlibrary.org/b/${key}/${value}-S.jpg`} alt={book.title}/>\n      </picture>\n    )\n  }\n\n  public render () {\n    const {book, active, lazyLoad} = this.props;\n    \n    if (!lazyLoad) {\n      return <></>;\n    }\n\n   \n    return (\n      <div className={`carousel-item ${active && 'active'}`}> \n        <div className='container'>\n          {this.getImage()}\n          <div className='infos'>\n            <h1>{book.title}</h1>\n            <p>{book.authorName && `by ${book.authorName.join(', ')}`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\ninterface Props {\n    onClick: Function,\n    activeIndex: number,\n    lastIndex: number,\n}\n \nexport default class Next extends React.Component<Props> {\n  public render () {\n    const {onClick, activeIndex, lastIndex} = this.props;\n\n    if (activeIndex + 1 > lastIndex) {\n      return <></>\n    }\n    \n    return (\n      <a className=\"carousel-control-next\" href=\"#next\" onClick={onClick(activeIndex+1)} role=\"button\" data-slide=\"next\">\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n      </a>\n    );\n  }\n}","import React from 'react';\n\ninterface Props {\n    onClick: Function,\n    activeIndex: number\n}\n \nexport default class Next extends React.Component<Props> {\n  public render () {\n    const {onClick, activeIndex} = this.props;\n\n    if(activeIndex === 0) {\n      return (<></>);\n    }\n    \n    return (\n      <a className=\"carousel-control-prev\" href=\"#prev\" onClick={onClick(activeIndex-1)} role=\"button\" data-slide=\"prev\">\n      <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span className=\"sr-only\">Previous</span>\n    </a>\n    );\n  }\n}","import React from 'react';\n\ninterface ErrorProps {\n  message: string\n}\n\nconst Loading:React.FC<ErrorProps> = ({message}) => {\n  return (\n    <div className='text-center'>\n      <span>Something went wrong</span>\n      <span>more info: {message}</span>\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\n\nconst Loading:React.FC = () => {\n  return (\n    <div className='text-center'>\n      <div className='spinner-border' role='status'>\n        <span className='sr-only'>Loading...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\n\ninterface ErrorProps {\n  message: string\n}\n\nconst Empty:React.FC = () => {\n  return (\n    <div className='text-center'>\n      <span>We found nothing <span role=\"img\" aria-label=\"eyes\">👀</span></span>\n    </div>\n  );\n}\n\nexport default Empty;","import React from 'react';\n\ninterface ErrorProps {\n  message: string\n}\n\nconst Initial:React.FC = () => {\n  return (\n    <div className='text-center'>\n      <span>Go on, type something <span role=\"img\" aria-label=\"piano\">🎹</span></span>\n    </div>\n  );\n}\n\nexport default Initial;","import React from 'react';\nimport { ApplicationState } from 'store';\nimport { connect } from 'react-redux';\nimport { BooksState, getBooksByTitlePage } from 'modules/books';\nimport { Dispatch } from 'redux';\nimport './carousel.scss';\n\nimport CarouselItem from './components/Item';\nimport Next from './components/Next';\nimport Previous from './components/Previous';\nimport Error from './components/Error'\nimport Loading from './components/Loading'\nimport Empty from './components/Empty'\nimport Initial from './components/Initial'\n\nconst LOAD_BACK = 3;\nconst LOAD_AHEAD = 3;\n\ninterface PropsFromState {\n  books: BooksState\n}\n\ninterface PropsFromDispatch {\n  getBooksByTitlePage: typeof getBooksByTitlePage\n}\n\n\ntype Props = PropsFromState & PropsFromDispatch;\n \nclass Carousel extends React.Component<Props> {\n\n  interval:any;\n\n  state = {\n    activeIndex: 0\n  }\n\n  constructor (props:Props) {\n    super(props);\n    this.interval = setInterval(this.nextSlide,10000);\n  } \n\n  nextSlide = () => {\n    const { books } = this.props;\n    const { activeIndex } = this.state;\n    let nextSlide = activeIndex + 1;\n\n    if (nextSlide > books.docs.length - 1) {\n      nextSlide = 0;\n    }\n\n    if(nextSlide === activeIndex) {\n      return;\n    }\n\n    this.handleSlide(nextSlide)();\n  }\n\n  handleSlide = (slide:number) => () => {\n    const {books, getBooksByTitlePage} = this.props;\n\n    if(slide >  books.docs.length - LOAD_AHEAD) {\n      getBooksByTitlePage(books.query, books.page + 1)\n    }\n    \n    this.setState({\n      ...this.state,\n      activeIndex: slide\n    })\n  }\n\n  componentDidUpdate(prevProps:Props) {\n    const { books } = this.props;\n    if (books.loading && !prevProps.books.loading) {\n      this.setState({\n        ...this.state, \n        activeIndex: 0\n      });\n    }\n  }\n\n  isLazyLoad = (index:number):boolean => {\n    const {activeIndex} = this.state;\n\n    return (index + LOAD_AHEAD >= activeIndex) && (index - LOAD_BACK <= activeIndex)\n  }\n  \n\n  public render () {\n    const { books } = this.props;\n    const { activeIndex } = this.state;\n\n    if (books.initial) {\n      return <Initial/>;\n    }\n\n    if (books.loading) {\n      return <Loading/>;\n    }\n\n    if (books.error) {\n      return <Error message={books.error}/>;\n    }\n\n    if (books.docs.length === 0) {\n      return <Empty/>;\n    }\n\n    return (\n      <div className=\"carousel slide mt-4 mb-4\" data-ride=\"carousel\">\n        <div className=\"carousel-inner\"> \n          {books.docs.map(\n            (item:Book, index:number) => \n              <CarouselItem \n                book={item} \n                key={index.toString()} \n                active={activeIndex === index}\n                lazyLoad={this.isLazyLoad(index)}\n              />\n          )}\n        </div>\n        <Previous onClick={this.handleSlide} activeIndex={activeIndex}/>\n        <Next onClick={this.handleSlide} activeIndex={activeIndex} lastIndex={books.numFound-1}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  books: state.books\n});\n\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\n  getBooksByTitlePage:(title:string, page:number) => dispatch(getBooksByTitlePage(title, page))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Carousel);\n","import React from 'react';\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux'\nimport Layout from 'layouts'\n\nimport Carousel from 'components/Carousel'\n\nimport { ApplicationState } from './store'\n\ninterface AppProps {\n  store: Store<ApplicationState>\n}\n\n\nconst App: React.FC<AppProps> = ({ store }) => {\n  return (\n    <Provider store={store}>\n      <Layout>\n        <Carousel />\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers, Store, createStore, applyMiddleware } from 'redux';\nimport { BooksState, booksReducer } from 'modules/books';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { apiMiddleWare } from 'middleware/api';\n\nexport interface ApplicationState {\n  books: BooksState\n};\n\nconst createRootReducer = () =>\n  combineReducers({\n    books: booksReducer,\n  });\n\n\nexport default function configureStore(\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(\n      apiMiddleWare\n    ))\n  )\n\n  return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from 'store'\n\nimport './styles/index.scss';\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(initialState);\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}